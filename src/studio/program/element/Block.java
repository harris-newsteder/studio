package studio.program.element;

import studio.program.Program;
import studio.program.Var;

import java.util.ArrayList;
import java.util.HashMap;

public abstract class Block extends Element {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public static final String EID = "block";

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /*
     *
     */
    public ArrayList<Pin> pins = null;

    /*
     *
     */
    public HashMap<String, Var> vars = null;

    /*
     *
     */
    protected String text = "";

    /*
     * a unique name that identifies what type of block this is
     */
    public final String name;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public Block(String name) {
        super(EID);
        this.name = name;
        pins = new ArrayList<>();
        vars = new HashMap<>();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    @Override
    public void kill() {
        super.kill();

        // kill all pins attached to this block, we won't be needing them anymore
        for (Pin pin : pins) {
            pin.kill();
        }
    }

    @Override
    public void tick(double dt) {

    }

    /*
     *
     */
    public abstract void createPins(Program program);

    protected void addPin(Pin pin) {
        pins.add(pin.index, pin);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public ArrayList<Pin> getPins() {
        return pins;
    }

    public HashMap<String, Var> getVars() {
        return vars;
    }

    public String getName() {
        return name;
    }
}
