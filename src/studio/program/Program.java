package studio.program;

import studio.blocklib.BlockLibrary;
import studio.gen.Generator;

import java.util.ArrayList;
import java.util.Iterator;

public final class Program {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // CONSTANTS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // VARIABLES
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /*
     *
     */
    private ArrayList<Element> elements = null;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // CONSTRUCTOR
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public Program() {
        elements = new ArrayList<>();

        Block b = BlockLibrary.construct("discrete_input");
        addBlock(b);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // PUBLIC FUNCTIONS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void tick(double dt) {
        Iterator i = elements.iterator();

        while (i.hasNext()) {
            Element e = (Element)i.next();
            e.tick(dt);

            // remove all dead elements from the list
            if (!e.isAlive()) {
                // TODO: make sure this doesn't happen while a javafx thread update is happening, it will nullify
                // something that is trying to draw to the screen
                i.remove();
            }
        }
    }

    public void addElement(Element element) {
        elements.add(element);
    }

    public void addBlock(Block block) {
        for (Pin pin : block.getPins()) {
            addElement(pin);
        }

        addElement(block);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // GETTERS & SETTERS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public ArrayList<Element> getElements() {
        return elements;
    }
}
